@model FinaceTool.Models.AMModel



@{
    /**/

    ViewBag.Title = "Edit";
    //  Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}
<script type="text/javascript" src="~/Scripts/BusinessJs/AdminCreatejs.js"></script>
@*<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">*@
<link href="~/Content/tablestyle.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-ui-1.10.0.js"></script>
<link href="~/Scripts/jquery-ui-1.9.2.custom.css" rel="stylesheet" />

<div style="margin-top:20px;margin-left:20px;">
    @Html.ActionLink("Back to List", "DisplayAmDetails", "AdminData", null, new { @style = "font-weight:bold;margin-left:40px;" })
</div>


@using (Html.BeginForm("AddAMDetails", "AdminData", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div style="padding-left:190px;height:400px;">
        <table>
            <thead>
                <tr>
                    <th scope="col" colspan="4">Create An Opportunity</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td style="width:30%">
                        @Html.LabelFor(model => model.S_No, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td style="width:70%">
                        @Html.EditorFor(model => model.S_No, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.S_No, "", new { @class = "text-danger" })
                    </td>

                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.Customername, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.CustomerId, Model.CustomerList, "Please Enter Customer Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customername, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.AMName, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.AMId, Model.AmUserList, "Please Select AM Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Customername, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.LOBName, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.LobId, Model.lobList, "Please Select Lob Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.LOBName, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.DUName, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.DuId, Model.duList, "Please Select Du Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DUName, "", new { @class = "text-danger" })

                    </td>
                </tr>
                <tr>
                    <td> @Html.LabelFor(model => model.DBBLDU, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.DBBLDuId, Model.duList, "Please Select DBBLDU", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DBBLDU, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>  @Html.LabelFor(model => model.OpportunityName, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.EditorFor(model => model.OpportunityName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OpportunityName, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>   @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-12", @style = "display:none" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.ProjectId, Model.ProjectList, "Please Select Project Name", new { @class = "form-control", @style = "display:none" })
                        @Html.ValidationMessageFor(model => model.ServiceLine, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.ProgramName, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.EditorFor(model => model.ProgramName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProgramName, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>  @Html.LabelFor(model => model.ServiceLine, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.ServiceLineId, Model.serviceList, "Please Select ServiceLine Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ServiceLine, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>
                        @Html.LabelFor(model => model.ProductGroup, htmlAttributes: new { @class = "control-label col-md-12" })
                    </td>
                    <td>
                        @Html.DropDownListFor(m => m.ProductGroupId, Model.ProductGroupList, "Please Select ProductGroup Name", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductGroup, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td> @Html.Label("TCV ($K)", htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.EditorFor(model => model.TCV, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01" } })
                        @Html.ValidationMessageFor(model => model.TCV, "", new { @class = "text-danger" })

                    </td>
                </tr>
                <tr>
                    <td>  @Html.Label("ACV ($K)", htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.EditorFor(model => model.acv, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01" } })
                        @Html.ValidationMessageFor(model => model.acv, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>@Html.Label("Sow Value ($K)", htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>@Html.EditorFor(model => model.SowStatusValue, new { htmlAttributes = new { @class = "form-control", @type = "number", @step = ".01" } })</td>
                </tr>
                <tr>
                    <td>@Html.LabelFor(model => model.sowvalue, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.SowStatusId, Model.SowStatusList, "Please Select Sow Status", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.sowvalue, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td> @Html.LabelFor(model => model.DealStage, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.DealStageId, Model.DealStageList, "Please Select Deal Stage", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.DealStage, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td> @Html.LabelFor(model => model.OpportunityCategory, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.DropDownListFor(m => m.OpportunityCategory, Model.OpportunityCategoryList, "Please Select Opportunity Category", new { @class = "form-control" })
                    </td>
                </tr>
                <tr>
                    <td>  @Html.LabelFor(model => model.BillingStratDate, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.EditorFor(model => model.BillingStratDate, "BillingStratDate", new { htmlAttributes = new { @class = "datepicker form-control" } })
                        @Html.ValidationMessageFor(model => model.BillingStratDate, "", new { @class = "text-danger" })
                    </td>
                </tr>
                <tr>
                    <td>  @Html.LabelFor(model => model.Note_Comment, htmlAttributes: new { @class = "control-label col-md-12" })</td>
                    <td>
                        @Html.EditorFor(model => model.Note_Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Note_Comment, "", new { @class = "text-danger" })
                    </td>
                </tr>

                @if (Model.Quaterlist != null)
                {
                    for (var i = 0; i < Model.Quaterlist.Count; i++)
                    {
                        <tr>
                            <td>
                                <label class="control-label col-md-12">@Html.DisplayFor(item => Model.Quaterlist[i].QuaterName)</label>
                            </td>
                            <td>
                                @Html.TextBox("txt" + Model.Quaterlist[i].QuaterName, null, new { @class = "form-control", @type = "number", @step = ".01" })
                            </td>
                        </tr>
                    }
                }

                <tr>
                    <td colspan="12" style="text-align:center">
                        <input type="submit" value="Submit" class="btn btn-primary" />
                    </td>
                </tr>
            </tbody>
        </table>
    </div>


}
<script>
    $(document).ready(function () {
        // Datepicker Popups calender to Choose date.
        $(function () {
            $("#BillingStratDate").datepicker();
            // Pass the user selected date format.
            //$("#format").change(function () {
            //    $("#BillingStratDate").datepicker("option", "dateFormat", $(this).val());
            //});
        });
    });
</script>
